// Generated by view binder compiler. Do not edit!
package com.example.qrhunter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qrhunter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScanQrCodeLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final EditText editTextComments;

  @NonNull
  public final FragmentContainerView googleMap;

  @NonNull
  public final ImageView image;

  @NonNull
  public final Button locationButton;

  @NonNull
  public final TextView scantext;

  @NonNull
  public final Button uploadCommentsButton;

  private ScanQrCodeLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull Button cameraButton,
      @NonNull EditText editTextComments, @NonNull FragmentContainerView googleMap,
      @NonNull ImageView image, @NonNull Button locationButton, @NonNull TextView scantext,
      @NonNull Button uploadCommentsButton) {
    this.rootView = rootView;
    this.cameraButton = cameraButton;
    this.editTextComments = editTextComments;
    this.googleMap = googleMap;
    this.image = image;
    this.locationButton = locationButton;
    this.scantext = scantext;
    this.uploadCommentsButton = uploadCommentsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScanQrCodeLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScanQrCodeLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.scan_qr_code_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScanQrCodeLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_button;
      Button cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.editText_comments;
      EditText editTextComments = ViewBindings.findChildViewById(rootView, id);
      if (editTextComments == null) {
        break missingId;
      }

      id = R.id.google_map;
      FragmentContainerView googleMap = ViewBindings.findChildViewById(rootView, id);
      if (googleMap == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.location_button;
      Button locationButton = ViewBindings.findChildViewById(rootView, id);
      if (locationButton == null) {
        break missingId;
      }

      id = R.id.scantext;
      TextView scantext = ViewBindings.findChildViewById(rootView, id);
      if (scantext == null) {
        break missingId;
      }

      id = R.id.upload_comments_button;
      Button uploadCommentsButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadCommentsButton == null) {
        break missingId;
      }

      return new ScanQrCodeLayoutBinding((ConstraintLayout) rootView, cameraButton,
          editTextComments, googleMap, image, locationButton, scantext, uploadCommentsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
