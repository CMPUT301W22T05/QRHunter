// Generated by view binder compiler. Do not edit!
package com.example.qrhunter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qrhunter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FriendQrDetailLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText commentTextbox;

  @NonNull
  public final RecyclerView commentsList;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final TextView lat;

  @NonNull
  public final TextView log;

  @NonNull
  public final ImageView no;

  @NonNull
  public final ImageView qrImage;

  @NonNull
  public final ConstraintLayout relativeLayout;

  @NonNull
  public final TextView sim;

  @NonNull
  public final TextView worth;

  @NonNull
  public final ImageView yes;

  private FriendQrDetailLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText commentTextbox, @NonNull RecyclerView commentsList,
      @NonNull TextView description, @NonNull TextView headerTitle,
      @NonNull ImageButton imageButton, @NonNull TextView lat, @NonNull TextView log,
      @NonNull ImageView no, @NonNull ImageView qrImage, @NonNull ConstraintLayout relativeLayout,
      @NonNull TextView sim, @NonNull TextView worth, @NonNull ImageView yes) {
    this.rootView = rootView;
    this.commentTextbox = commentTextbox;
    this.commentsList = commentsList;
    this.description = description;
    this.headerTitle = headerTitle;
    this.imageButton = imageButton;
    this.lat = lat;
    this.log = log;
    this.no = no;
    this.qrImage = qrImage;
    this.relativeLayout = relativeLayout;
    this.sim = sim;
    this.worth = worth;
    this.yes = yes;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FriendQrDetailLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FriendQrDetailLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.friend_qr_detail_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FriendQrDetailLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_textbox;
      EditText commentTextbox = ViewBindings.findChildViewById(rootView, id);
      if (commentTextbox == null) {
        break missingId;
      }

      id = R.id.comments_list;
      RecyclerView commentsList = ViewBindings.findChildViewById(rootView, id);
      if (commentsList == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.header_title;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.lat;
      TextView lat = ViewBindings.findChildViewById(rootView, id);
      if (lat == null) {
        break missingId;
      }

      id = R.id.log;
      TextView log = ViewBindings.findChildViewById(rootView, id);
      if (log == null) {
        break missingId;
      }

      id = R.id.no;
      ImageView no = ViewBindings.findChildViewById(rootView, id);
      if (no == null) {
        break missingId;
      }

      id = R.id.qr_image;
      ImageView qrImage = ViewBindings.findChildViewById(rootView, id);
      if (qrImage == null) {
        break missingId;
      }

      ConstraintLayout relativeLayout = (ConstraintLayout) rootView;

      id = R.id.sim;
      TextView sim = ViewBindings.findChildViewById(rootView, id);
      if (sim == null) {
        break missingId;
      }

      id = R.id.worth;
      TextView worth = ViewBindings.findChildViewById(rootView, id);
      if (worth == null) {
        break missingId;
      }

      id = R.id.yes;
      ImageView yes = ViewBindings.findChildViewById(rootView, id);
      if (yes == null) {
        break missingId;
      }

      return new FriendQrDetailLayoutBinding((ConstraintLayout) rootView, commentTextbox,
          commentsList, description, headerTitle, imageButton, lat, log, no, qrImage,
          relativeLayout, sim, worth, yes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
